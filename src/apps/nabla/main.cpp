
#include <iostream>
#include "BinExec.hpp"

// --------------------------------------------
//  Execute a binary
// --------------------------------------------
    
void handle_execution(std::string file)
{
    NABLA::BinExec exec;
    if(!exec.loadBinaryFromFile(file))
    {
        // Error messages generated by BinExec
        return;
    }

    if(!exec.execute())
    {
        // Do nothing for now. In the future, an option might exist where we pipe the binary to HARP
        return;
    }
}

// --------------------------------------------
// Compile Nabla HLL
// --------------------------------------------
    
void handle_compilation(std::string file)
{
    // Eventually we will invoke the compiler for the NABLA HLL here
}

// --------------------------------------------
// Interpret Nabla HLL
// --------------------------------------------
    
void handle_interpretation()
{
    // Eventually we will invoke the interpreter here
}

// --------------------------------------------
// Entry
// --------------------------------------------
    
int main(int argc, char ** argv)
{

    //  In the future flags for operation should be configured here, but for now
    //  we just load the thing and execute if a file is given, otherwise
    //  we need to drop the user into an interpreter
    if(argc == 2)
    {
        handle_execution(std::string(argv[1]));
        return 0;
    }

    std::cerr << "Right now only the execution of bin files is supported. To generate a bin file, use the solace assembler" 
              << "\non some Nabla ASM instructions to generate bytecode, then you can load the resulting solace.out file "
              << "\nhere to execute it."
              << std::endl;

    return 0;
}